services:
    # MongoDB Database
    mongodb:
        image: mongo:7.0
        container_name: hub-service-mongodb-prod
        restart: unless-stopped
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
            MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
        ports:
            - '127.0.0.1:27017:27017' # Bind to localhost only
        volumes:
            - mongodb_data_prod:/data/db
        networks:
            - hub-network-prod
        healthcheck:
            test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
            interval: 30s
            timeout: 10s
            retries: 3
        security_opt:
            - no-new-privileges:true
        read_only: false
        tmpfs:
            - /tmp
            - /var/run

    # Hub Service Application
    hub-service:
        build:
            context: ..
            dockerfile: compose/Dockerfile
        container_name: hub-service-app-prod
        restart: unless-stopped
        ports:
            - '127.0.0.1:${PORT:-8080}:8080' # Bind to localhost only
        environment:
            # App Configuration
            SYSTEM_APP_NAME: ${SYSTEM_APP_NAME}
            SYSTEM_SECRET_KEY: ${SYSTEM_SECRET_KEY}
            PORT: 8080

            # MongoDB Configuration
            SYSTEM_MONGODB_URI: ${MONGO_URI}

            # Email Configuration
            SYSTEM_EMAIL_SERVER: ${SYSTEM_EMAIL_SERVER}
            SYSTEM_EMAIL_SERVER_TRANSMASTER: ${SYSTEM_EMAIL_SERVER_TRANSMASTER}
            SYSTEM_EMAIL: ${SYSTEM_EMAIL}
            SYSTEM_EMAIL_TRANSMASTER: ${SYSTEM_EMAIL_TRANSMASTER}
            SYSTEM_EMAIL_HOST: ${SYSTEM_EMAIL_HOST}
            SYSTEM_EMAIL_PORT: ${SYSTEM_EMAIL_PORT}
            SYSTEM_EMAIL_PASSWORD: ${SYSTEM_EMAIL_PASSWORD}
            SYSTEM_PHONE_NUMBER: ${SYSTEM_PHONE_NUMBER}

            # DeepL Configuration
            SYSTEM_DEEPL_API_KEY: ${SYSTEM_DEEPL_API_KEY}
            SYSTEM_DEEPL_BASE_URL: ${SYSTEM_DEEPL_BASE_URL}

            # Google social Login OAuth2
            SYSTEM_GOOGLE_AUTHENTICATOR: ${SYSTEM_GOOGLE_AUTHENTICATOR}
            SYSTEM_GOOGLE_CLIENT_SECRET: ${SYSTEM_GOOGLE_CLIENT_SECRET}

            # Portfolio URLs
            BASE_URL_PORTFOLIO: ${BASE_URL_PORTFOLIO}
            BASE_URL_LOCAL: ${BASE_URL_LOCAL}
            BASE_URL_DEV: ${BASE_URL_DEV}
            BASE_URL_TRANSMASTER_PROD: ${BASE_URL_TRANSMASTER_PROD}

            # Security Configuration
            NODE_ENV: production
            LOG_LEVEL: warn
        depends_on:
            mongodb:
                condition: service_healthy
        networks:
            - hub-network-prod
        healthcheck:
            test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:8080/health']
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        security_opt:
            - no-new-privileges:true
        read_only: true
        tmpfs:
            - /tmp
            - /var/run
        deploy:
            resources:
                limits:
                    memory: 1G
                    cpus: '1.0'
                reservations:
                    memory: 512M
                    cpus: '0.5'

    # Nginx Reverse Proxy (Optional)
    nginx:
        image: nginx:alpine
        container_name: hub-service-nginx
        restart: unless-stopped
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/ssl:/etc/nginx/ssl:ro
        depends_on:
            - hub-service
        networks:
            - hub-network

    # MongoDB Express (Optional - for database management)
    # Only enable in production if absolutely necessary
    mongo-express:
        image: mongo-express:latest
        container_name: hub-service-mongo-express-prod
        restart: unless-stopped
        ports:
            - '127.0.0.1:8081:8081' # Bind to localhost only
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
            ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/
            ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
            ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
        depends_on:
            mongodb:
                condition: service_healthy
        networks:
            - hub-network-prod
        security_opt:
            - no-new-privileges:true
        profiles:
            - admin # Only start when explicitly requested

volumes:
    mongodb_data_prod:
        driver: local

networks:
    hub-network-prod:
        driver: bridge
        internal: true # Internal network for better security
