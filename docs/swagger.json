{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample hub service API. You can enter your access token directly without 'Bearer ' prefix.",
        "title": "Hub Service API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/challenges": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new translation challenge and store it in the database. Only admin and super_admin can access this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "challenges"
                ],
                "summary": "Create a new challenge",
                "parameters": [
                    {
                        "description": "Challenge data to create",
                        "name": "challenge",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ChallengeCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created. Returns the ID of the new challenge.",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Only admin and super_admin can access",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/api/challenges/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of translation challenges with pagination. All authenticated users can access this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "challenges"
                ],
                "summary": "List challenges",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by section ID",
                        "name": "section_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/hub-service_module_challenge_model.Challenge"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/definitions/common.Paging"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/api/challenges/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve the details of a specific translation challenge by its unique ID. All authenticated users can access this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "challenges"
                ],
                "summary": "Get a challenge by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Challenge ID (MongoDB ObjectID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/hub-service_module_challenge_model.Challenge"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "404": {
                        "description": "Challenge not found",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a translation challenge by its unique ID. Only admin and super_admin can access this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "challenges"
                ],
                "summary": "Delete a challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Challenge ID (MongoDB ObjectID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Only admin and super_admin can access",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "404": {
                        "description": "Challenge not found",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the details of an existing translation challenge by its ID. Only admin and super_admin can access this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "challenges"
                ],
                "summary": "Update a challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Challenge ID (MongoDB ObjectID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Challenge data to update",
                        "name": "challenge",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ChallengeUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request or invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Only admin and super_admin can access",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "404": {
                        "description": "Challenge not found",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/api/email/multiple": {
            "post": {
                "description": "Send emails to multiple recipients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "email"
                ],
                "summary": "Send multiple emails",
                "parameters": [
                    {
                        "description": "List of email data",
                        "name": "emails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/emailmodel.MultipleEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email sent successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/email/response-portfolio": {
            "post": {
                "description": "Send a response email for portfolio inquiry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "email"
                ],
                "summary": "Response to portfolio inquiry",
                "parameters": [
                    {
                        "description": "Response data",
                        "name": "response",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/emailmodel.EmailResponsePortfolio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email sent successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/email/single": {
            "post": {
                "description": "Send an email to a single recipient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "email"
                ],
                "summary": "Send a single email",
                "parameters": [
                    {
                        "description": "Email data",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/emailmodel.EmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email sent successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/scores/translate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Submits a user's translation, gets a score from DeepL, and saves the result.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scores"
                ],
                "summary": "Score and save user translation for a challenge",
                "parameters": [
                    {
                        "description": "Translation scoring request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ScoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.SubmitScoreResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "404": {
                        "description": "Challenge not found",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/api/scores/user/{user_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed scores and summary for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scores"
                ],
                "summary": "Get user's scores for all challenges",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetUserScoresAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/api/sections/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new section for a challenge. Only admin and super_admin can access this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sections"
                ],
                "summary": "Create a new section",
                "parameters": [
                    {
                        "description": "Section data",
                        "name": "section",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SectionCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created. Returns the ID of the new section.",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Only admin and super_admin can access",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/api/sections/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of sections with pagination, search by title and user scores. All authenticated users can access this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sections"
                ],
                "summary": "Get a list of sections with pagination, search and user scores",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by section title (case-insensitive)",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.SectionWithScore"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/definitions/common.Paging"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/api/sections/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a section with all its related challenges and user score. All authenticated users can access this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sections"
                ],
                "summary": "Get a section by ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"62b4c3789196e8a159933552\"",
                        "description": "Section ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.SectionWithChallenges"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid section ID",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "404": {
                        "description": "Section not found",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a section and all its related challenges. Only admin and super_admin can access this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sections"
                ],
                "summary": "Delete a section",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"62b4c3789196e8a159933552\"",
                        "description": "Section ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid section ID",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Only admin and super_admin can access",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "404": {
                        "description": "Section not found",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing section by ID. Only admin and super_admin can access this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sections"
                ],
                "summary": "Update a section",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Section ID (MongoDB ObjectID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Section data to update",
                        "name": "section",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SectionUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request or invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Only admin and super_admin can access",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "404": {
                        "description": "Section not found",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/api/users/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of users with pagination, sorting, and search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page number (minimum: 1, default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Number of items per page (minimum: 1, maximum: 100, default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "name",
                            "email",
                            "created_at",
                            "updated_at"
                        ],
                        "type": "string",
                        "default": "created_at",
                        "description": "Sort by field (name, email, created_at, updated_at)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort order (asc, desc)",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name or email (case-insensitive)",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns users list with pagination metadata",
                        "schema": {
                            "$ref": "#/definitions/model.ListUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/refresh": {
            "post": {
                "description": "Get a new access token and refresh token pair using a valid refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LoginAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/set-role": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update role of a user (super_admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user role",
                "parameters": [
                    {
                        "description": "User email and new role",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/social-login": {
            "post": {
                "description": "Login or register user via Google OAuth",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Social login (Google)",
                "parameters": [
                    {
                        "description": "Social login info",
                        "name": "social",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SocialLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LoginAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get user information by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DeleteUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UpdateUserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.AppError": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "log": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "root_err": {},
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "common.Paging": {
            "type": "object",
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "next_cursor": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "common.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "emailmodel.EmailRequest": {
            "type": "object",
            "required": [
                "body",
                "subject",
                "to"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "emailmodel.EmailResponsePortfolio": {
            "type": "object",
            "required": [
                "email",
                "message",
                "name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "emailmodel.MultipleEmailRequest": {
            "type": "object",
            "required": [
                "body",
                "listRecipient",
                "subject"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "listRecipient": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "email",
                            "name"
                        ],
                        "properties": {
                            "email": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "hub-service_module_challenge_model.Challenge": {
            "description": "Contains the details of a translation challenge.",
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "work"
                },
                "content": {
                    "type": "string",
                    "example": "Hello, world!"
                },
                "created_at": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "string",
                    "example": "easy"
                },
                "id": {
                    "type": "string",
                    "example": "62b4c3789196e8a159933552"
                },
                "section_id": {
                    "type": "string",
                    "example": "62b4c3789196e8a159933552"
                },
                "source_lang": {
                    "type": "string",
                    "example": "VI"
                },
                "target_lang": {
                    "type": "string",
                    "example": "EN"
                },
                "title": {
                    "type": "string",
                    "example": "Greetings"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "hub-service_module_score_model.UserScoreSummary": {
            "type": "object",
            "properties": {
                "average_score": {
                    "type": "number"
                },
                "best_score": {
                    "type": "number"
                },
                "total_challenges": {
                    "type": "integer"
                },
                "total_score": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "hub-service_module_section_model.Challenge": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "section_id": {
                    "type": "string"
                },
                "source_lang": {
                    "type": "string"
                },
                "target_lang": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "hub-service_module_section_model.UserScoreSummary": {
            "type": "object",
            "properties": {
                "average_score": {
                    "type": "number"
                },
                "best_score": {
                    "type": "number"
                },
                "total_challenges": {
                    "type": "integer"
                },
                "total_score": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "hub-service_module_user_model.PaginationMetadata": {
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "has_prev": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "model.ChallengeCreate": {
            "description": "Required fields for creating a new translation challenge.",
            "type": "object",
            "required": [
                "category",
                "content",
                "difficulty",
                "source_lang",
                "target_lang",
                "title"
            ],
            "properties": {
                "category": {
                    "type": "string",
                    "enum": [
                        "work",
                        "life",
                        "travel",
                        "daily_life",
                        "entertainment",
                        "education",
                        "economy",
                        "health",
                        "sport",
                        "technology",
                        "culture"
                    ],
                    "example": "work"
                },
                "content": {
                    "type": "string",
                    "example": "Hello, world!"
                },
                "difficulty": {
                    "type": "string",
                    "enum": [
                        "easy",
                        "medium",
                        "hard"
                    ],
                    "example": "easy"
                },
                "section_id": {
                    "type": "string",
                    "example": "62b4c3789196e8a159933552"
                },
                "source_lang": {
                    "type": "string",
                    "example": "VI"
                },
                "target_lang": {
                    "type": "string",
                    "example": "EN"
                },
                "title": {
                    "type": "string",
                    "example": "Greetings"
                }
            }
        },
        "model.ChallengeScore": {
            "type": "object",
            "properties": {
                "attempt_count": {
                    "type": "integer"
                },
                "best_score": {
                    "type": "number"
                },
                "challenge_id": {
                    "type": "string"
                },
                "challenge_title": {
                    "type": "string"
                },
                "deepl_translation": {
                    "type": "string"
                },
                "last_attempt_at": {
                    "type": "string"
                },
                "original_content": {
                    "type": "string"
                },
                "user_translation": {
                    "type": "string"
                }
            }
        },
        "model.ChallengeUpdate": {
            "description": "Fields available for updating a translation challenge. All fields are optional.",
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "enum": [
                        "work",
                        "life",
                        "travel",
                        "daily_life",
                        "entertainment",
                        "education",
                        "economy",
                        "health",
                        "sport",
                        "technology",
                        "culture"
                    ],
                    "example": "work"
                },
                "content": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Good morning, everyone."
                },
                "difficulty": {
                    "type": "string",
                    "enum": [
                        "easy",
                        "medium",
                        "hard"
                    ],
                    "example": "easy"
                },
                "section_id": {
                    "type": "string",
                    "example": "62b4c3789196e8a159933552"
                },
                "source_lang": {
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "VI"
                },
                "target_lang": {
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "EN"
                },
                "title": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Formal Greetings"
                }
            }
        },
        "model.DeleteUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.GetUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserResponse"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.GetUserScoresAPIResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GetUserScoresResponse"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.GetUserScoresResponse": {
            "type": "object",
            "properties": {
                "scores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ChallengeScore"
                    }
                },
                "summary": {
                    "$ref": "#/definitions/hub-service_module_score_model.UserScoreSummary"
                }
            }
        },
        "model.ListUsersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserResponse"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/hub-service_module_user_model.PaginationMetadata"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.LoginAPIResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.LoginResponse"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.UserResponse"
                }
            }
        },
        "model.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "model.ScoreRequest": {
            "description": "Request body for scoring user's translation",
            "type": "object",
            "required": [
                "challenge_id",
                "user_translation"
            ],
            "properties": {
                "challenge_id": {
                    "type": "string",
                    "example": "challenge_1"
                },
                "sentence_index": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "user_translation": {
                    "type": "string",
                    "example": "I see yellow flowers on the green grass."
                }
            }
        },
        "model.Section": {
            "description": "Section of a challenge containing title and content.",
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.SectionCreate": {
            "description": "Required fields for creating a new section.",
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.SectionUpdate": {
            "description": "Optional fields for updating a section.",
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.SectionWithChallenges": {
            "type": "object",
            "properties": {
                "challenges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hub-service_module_section_model.Challenge"
                    }
                },
                "section": {
                    "$ref": "#/definitions/model.Section"
                },
                "user_score": {
                    "$ref": "#/definitions/hub-service_module_section_model.UserScoreSummary"
                }
            }
        },
        "model.SectionWithScore": {
            "type": "object",
            "properties": {
                "section": {
                    "$ref": "#/definitions/model.Section"
                },
                "user_score": {
                    "$ref": "#/definitions/hub-service_module_section_model.UserScoreSummary"
                }
            }
        },
        "model.SocialLoginRequest": {
            "type": "object",
            "required": [
                "email",
                "id_token",
                "name",
                "provider",
                "provider_id"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id_token": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                }
            }
        },
        "model.SubmitScoreResponse": {
            "type": "object",
            "properties": {
                "attempt_count": {
                    "type": "integer"
                },
                "best_score": {
                    "type": "number"
                },
                "deepl_translation": {
                    "type": "string"
                },
                "is_new_best": {
                    "type": "boolean"
                },
                "original_content": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "user_translation": {
                    "type": "string"
                }
            }
        },
        "model.UpdateRoleRequest": {
            "type": "object",
            "required": [
                "email",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "client",
                        "super_admin"
                    ]
                }
            }
        },
        "model.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserResponse"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.UserResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "total_score": {
                    "description": "Total score from all challenges",
                    "type": "number",
                    "example": 95.5
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.UserUpdate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter your access token directly (without 'Bearer ' prefix). The system will automatically handle both formats.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}